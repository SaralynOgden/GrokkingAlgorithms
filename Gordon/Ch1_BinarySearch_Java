/**
 * Grokking Algorithms. Ch1 Binary Search.
 * @author Gordon Lippa, gordonlippa@hotmail.com
 * Created on Jul 14, 2016
 */
package lessons;

public class BinarySearch
{
	
	public static void main(String[] args)
    { 
        int[ ] my_list = new int []{1, 3, 5, 7, 9};
        int term = 9;
        System.out.println("Term " + term + " found at position " + binary_search(my_list, term));
        // System.out.println("Finding the term took " + guessCount + " steps");
        
    } // end main()

	/**
	 * @param my_list
	 * @param i
	 * @return
	 * binary_search
	 * char []
	 */
	private static int binary_search(int[] my_list, int i) {

		int low = 0;
        int high = my_list.length-1;
        int guessCount = 0;
        
        while (low <= high)
        {
        	guessCount += guessCount;
        	int mid = (low + high)/2;
        	int guess = my_list[mid];
        	
        	if (guess == i) // item found
        	{
        		return mid;
        	}
        	
        	if (guess > i) // guess too high
        	{
        		high = mid - 1;
        	}
        	
        	else // guess too low
        	{
        		low = mid +1;
        	}
        	
        }
     // guess not in my_list
    	return -1;
		
	} // end binary_search()

} // end class, BinarySearch
